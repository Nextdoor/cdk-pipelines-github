// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example app 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: \\"16\\"
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: echo \\"nothing to do (cdk.out is committed)\\"
      - run: echo post-build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz /tmp/exampleApp.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  StageA-Pre:
    name: Pre
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - Build-Build
    env: {}
    steps:
      - run: echo hello
  StageA-BucketStack-Deploy:
    name: Deploy StageA/BucketStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app /tmp/exampleApp.out deploy StageA/BucketStack
  StageA-FunctionStack-Deploy:
    name: Deploy StageA/FunctionStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app /tmp/exampleApp.out deploy StageA/FunctionStack
    outputs:
      myout: \${{ steps.Deploy.outputs.myout }}
  StageA-Post:
    name: Post
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - StageA-FunctionStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - Build-Build
    env:
      FN_NAME: \${{ needs.StageA-FunctionStack-Deploy.outputs.myout }}
    steps:
      - run: \\"echo FN_NAME equals: $FN_NAME\\"
  StageB-BucketStack-Deploy:
    name: Deploy StageB/BucketStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app /tmp/exampleApp.out deploy StageB/BucketStack
  StageB-FunctionStack-Deploy:
    name: Deploy StageB/FunctionStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageB-BucketStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app /tmp/exampleApp.out deploy StageB/FunctionStack
"
`;

exports[`pipeline with GitHub hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: windows-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
"
`;

exports[`pipeline with a dedicated buildRunner setting 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on:
      group: test-group
      labels: []
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
"
`;

exports[`pipeline with a dedicated buildRunner setting and labels 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on:
      group: test-group
      labels:
        - withLabel
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
"
`;

exports[`pipeline with aws credentials in custom secrets 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.MY_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.MY_SECRET_ACCESS_KEY }}
          aws-session-token: \${{ secrets.MY_SESSION_TOKEN }}
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.MY_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.MY_SECRET_ACCESS_KEY }}
          aws-session-token: \${{ secrets.MY_SESSION_TOKEN }}
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

exports[`pipeline with aws credentials using OIDC and role-session-name 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 900
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role
          role-session-name: my-github-actions-session
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 900
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::111111111111:role/my-github-actions-role
          role-session-name: my-github-actions-session
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

exports[`pipeline with job settings 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: \\"\\"
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

exports[`pipeline with only a synth step 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
"
`;

exports[`pipeline with publish asset region override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: \\"\\"
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

exports[`pipeline with self-hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on:
      - self-hosted
      - label1
      - label2
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: yarn build
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
"
`;

exports[`single wave/stage/stack - with diff enabled 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: \\"\\"
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Diff
        run: npx cdk --app github.out diff MyStack/MyStack
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

exports[`single wave/stage/stack 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - name: Build
        run: \\"\\"
      - name: Package cdk.out
        run: tar -zcf cdk.out.tgz github.out
      - name: Upload cdk.out
        uses: actions/upload-artifact@v3
        with:
          name: cdk.out
          path: cdk.out.tgz
          retention-days: 1
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack/MyStack
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download cdk.out
        uses: actions/download-artifact@v3
        with:
          name: cdk.out
      - name: Unpackage cdk.out
        run: tar -zxf cdk.out.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
      - id: Deploy
        run: npx cdk --app github.out deploy MyStack/MyStack
"
`;

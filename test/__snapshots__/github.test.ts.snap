// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`example app 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    container:
      image: alpine
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: \\"16\\"
      - name: Build
        run: echo \\"nothing to do (cdk.out is committed)\\"
      - run: echo post-build
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
  StageA-Pre:
    name: Pre
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - Build-Build
    env: {}
    steps:
      - run: echo hello
  StageA-BucketStack-Deploy:
    name: Deploy StageABucketStackEAC67DBE
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy StageA/BucketStack
  StageA-FunctionStack-Deploy:
    name: Deploy StageAFunctionStackD42C27B8
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-Pre
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy StageA/FunctionStack
    outputs:
      myout: \${{ steps.Deploy.outputs.myout }}
  StageA-Post:
    name: Post
    permissions:
      contents: read
    runs-on: ubuntu-latest
    needs:
      - StageA-FunctionStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - Build-Build
    env:
      FN_NAME: \${{ needs.StageA-FunctionStack-Deploy.outputs.myout }}
    steps:
      - run: \\"echo FN_NAME equals: $FN_NAME\\"
  StageB-BucketStack-Deploy:
    name: Deploy StageBBucketStackDF3FFF07
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: eu-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy StageB/BucketStack
  StageB-FunctionStack-Deploy:
    name: Deploy StageBFunctionStack18098DCD
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
      - StageB-BucketStack-Deploy
      - StageA-BucketStack-Deploy
      - StageA-FunctionStack-Deploy
      - StageA-Pre
      - StageA-Post
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: eu-west-2
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::222222222222:role/cdk-hnb659fds-deploy-role-222222222222-eu-west-2
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy StageB/FunctionStack
"
`;

exports[`pipeline with GitHub hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: windows-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
"
`;

exports[`pipeline with job settings 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: \\"\\"
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    if: github.repository == 'account/repo'
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy MyStack/MyStack
"
`;

exports[`pipeline with oidc authentication 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: write
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: write
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via OIDC Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          role-to-assume: arn:aws:iam::000000000000:role/GitHubActionRole
      - name: Assume CDK Deploy Role
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: \${{ env.AWS_SESSION_TOKEN }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy MyStack/MyStack
"
`;

exports[`pipeline with only a synth step 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
"
`;

exports[`pipeline with publish asset region override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: \\"\\"
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy MyStack/MyStack
"
`;

exports[`pipeline with self-hosted runner override 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on:
      - self-hosted
      - label1
      - label2
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        run: yarn
      - name: Build
        run: yarn build
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
"
`;

exports[`single wave/stage/stack 1`] = `
"# AUTOMATICALLY GENERATED FILE, DO NOT EDIT MANUALLY.
# Generated by AWS CDK and [cdk-pipelines-github](https://github.com/cdklabs/cdk-pipelines-github)

name: deploy
on:
  push:
    branches:
      - main
  workflow_dispatch: {}
jobs:
  Build-Build:
    name: Synthesize
    permissions:
      contents: read
      id-token: none
    runs-on: ubuntu-latest
    needs: []
    env: {}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build
        run: \\"\\"
      - name: Package
        run: tar -zcf /tmp/workspace.tgz .
      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: source
          path: /tmp/workspace.tgz
          if-no-files-found: error
  MyStack-MyStack-Deploy:
    name: Deploy MyStack098574E7
    permissions:
      contents: read
      id-token: none
    needs:
      - Build-Build
    runs-on: ubuntu-latest
    steps:
      - name: Download
        uses: actions/download-artifact@v3
        with:
          name: source
      - name: Unpackage
        run: tar -zxvf workspace.tgz
      - name: Authenticate Via GitHub Secrets
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: us-east-1
          role-duration-seconds: 1800
          role-skip-session-tagging: true
          aws-access-key-id: \${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: \${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-to-assume: arn:aws:iam::111111111111:role/cdk-hnb659fds-deploy-role-111111111111-us-east-1
          role-external-id: Pipeline
      - id: Deploy
        run: npx cdk deploy MyStack/MyStack
"
`;
